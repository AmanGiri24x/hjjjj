version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: dhanaillytics-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: dhanaillytics
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - dhanaillytics-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: dhanaillytics-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - dhanaillytics-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dhanaillytics-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:admin123@mongodb:27017/dhanaillytics?authSource=admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis123
      JWT_SECRET: your_super_secret_jwt_key_here_min_32_characters
      JWT_REFRESH_SECRET: your_refresh_secret_here_min_32_characters
      CORS_ORIGIN: http://localhost:3000
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/uploads:/app/uploads
    networks:
      - dhanaillytics-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: dhanaillytics-frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:5000
      NEXT_PUBLIC_WS_URL: ws://localhost:5000
      NEXT_PUBLIC_APP_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - dhanaillytics-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  dhanaillytics-network:
    driver: bridge
